name: Test Python wrapper for LiteSync

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  test:

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', '3.12']
        exclude:
          - os: macos-14
            python-version: '3.7'

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install native library - Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        wget https://litesync.io/download/litesync-free-linux-x86_64.tar.gz
        tar -xzvf litesync-free-linux-x86_64.tar.gz
        sudo ./install

    - name: Install native library - Windows
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        curl -O https://litesync.io/download/litesync-free-windows-x86_64.tar.gz
        tar -xzvf litesync-free-windows-x86_64.tar.gz
        .\install.bat

    - name: Install native library - Mac Intel
      if: matrix.os == 'macos-13'
      run: |
        wget https://litesync.io/download/litesync-free-mac-x86_64.tar.gz
        tar -xzvf litesync-free-mac-x86_64.tar.gz
        ./install

    - name: Install native library - Mac ARM
      if: matrix.os == 'macos-14'
      run: |
        wget https://litesync.io/download/litesync-free-mac-arm64.tar.gz
        tar -xzvf litesync-free-mac-arm64.tar.gz
        sudo ./install

    - name: Install wrapper
      run: |
        python -m pip install --upgrade pip
        pip install litesync

    - name: Run test
      run: |
        python test.py
        ls

